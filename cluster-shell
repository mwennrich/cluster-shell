#!/usr/bin/env sh

kubectl=kubectl

while [ $# -gt 0 ]; do
  key="$1"

  case $key in
  -h | --help)
   cat << EOF
Usage: cluster-shell [options]
  --context
  --kubeconfig
  -n | --namespace)
EOF
   exit 0
   ;;
  --context)
    kubectl="$kubectl --context $2"
    shift
    shift
    ;;
  --kubeconfig)
    kubectl="$kubectl --kubeconfig $2"
    shift
    shift
    ;;
  --kubeconfig=*)
    kubectl="$kubectl --kubeconfig=${key##*=}"
    shift
    ;;
  -n | --namespace)
    kubectl="$kubectl --namespace $2"
    shift
    shift
    ;;
  --namespace=*)
    kubectl="$kubectl --namespace=${key##*=}"
    shift
    ;;
  esac
done


pod="csenter-$(env LC_ALL=C tr -dc a-z0-9 </dev/urandom | head -c 6)"

overrides="$(
cat <<EOT
{
  "spec": {
      "automountServiceAccountToken": false,
      "containers": [
          {
              "command": [
                  "bash"
              ],
              "image": "ghcr.io/mwennrich/cluster-shell:latest",
              "name": "$pod",
              "tty": true,
              "stdin": true,
              "stdinOnce": true,
              "volumeMounts": [
                  {
                      "mountPath": "/.kubeconfig",
                      "name": "kubeconfig"
                  }
              ]
          }
      ],
      "serviceAccountName": "default",
      "terminationGracePeriodSeconds": 1,
      "tolerations": [
          {
              "effect": "NoExecute",
              "key": "node.kubernetes.io/not-ready",
              "operator": "Exists",
              "tolerationSeconds": 300
          },
          {
              "effect": "NoExecute",
              "key": "node.kubernetes.io/unreachable",
              "operator": "Exists",
              "tolerationSeconds": 300
          }
      ],
      "volumes": [
          {
              "name": "kubeconfig",
              "secret": {
                  "secretName": "gardener"
              }
          }
      ]
  }
}
EOT
)"

trap "EC=\$?; $kubectl delete pod --wait=false $pod >&2 || true; exit \$EC" EXIT INT TERM

$kubectl run --image  ghcr.io/mwennrich/cluster-shell:latest --restart=Never --overrides="$overrides" -it "$pod" -- bash
